"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const web3_1 = __importDefault(require("web3"));
const onboarding_1 = __importDefault(require("../src/modules/onboarding"));
// DEFAULT GANACHE ACCOUNT FOR TESTING ONLY -- DO NOT USE IN PRODUCTION.
const GANACHE_ADDRESS = '0x90F8bf6A479f320ead074411a4B0e7944Ea8c9C1';
const GANACHE_PRIVATE_KEY = '0x4f3edf983ac636a65a842ce7c78d9aa706d3b113bce9c46f30d7d21715b23b1d';
const EXPECTED_API_KEY_CREDENTIALS_MAINNET = {
    key: '50fdcaa0-62b8-e827-02e8-a9520d46cb9f',
    secret: 'rdHdKDAOCa0B_Mq-Q9kh8Fz6rK3ocZNOhKB4QsR9',
    passphrase: '12_1LuuJMZUxcj3kGBWc',
};
const EXPECTED_STARK_KEY_PAIR_MAINNET = {
    publicKey: '039d88860b99b1809a63add01f7dfa59676ae006bbcdf38ff30b6a69dcf55ed3',
    publicKeyYCoordinate: '02bdd58a2c2acb241070bc5d55659a85bba65211890a8c47019a33902aba8400',
    privateKey: '0170d807cafe3d8b5758f3f698331d292bf5aeb71f6fd282f0831dee094ee891',
};
const EXPECTED_API_KEY_CREDENTIALS_ROPSTEN = {
    key: '9c1d91a5-0a30-1ed4-2d3d-b840a479b965',
    secret: 'hHYEswFe5MHMm8gFb81Jas9b7iLQUicsVv5YBRMY',
    passphrase: '9z5Ew7m2DLQd87Xlk7Hd',
};
const EXPECTED_STARK_KEY_PAIR_ROPSTEN = {
    publicKey: '035e23a936e596969a6b3131cfccbd18b71779f28276d30e8215cd0d3e9252c2',
    publicKeyYCoordinate: '0557d1a1be389d9921b9d16415eac12bd276b05e2564c4b30a7730ace13a0e19',
    privateKey: '050505654b282eb3debadddeddfa1bc76545a6837dcd59d7d41f6a282a4bbccc',
};
let onboardingMainnetRemote;
let onboardingRopstenRemote;
let onboardingMainnetLocal;
let onboardingRopstenLocal;
describe('Onboarding module', () => {
    describe('mainnet, with a web3 provider', () => {
        beforeAll(async () => {
            const web3 = new web3_1.default(new web3_1.default.providers.HttpProvider('http://127.0.0.1:8545'));
            onboardingMainnetRemote = new onboarding_1.default('http://example.com', web3, 1);
        });
        it('derives the default STARK key pair', async () => {
            const keyPair = await onboardingMainnetRemote.deriveStarkKey(GANACHE_ADDRESS);
            expect(keyPair).toStrictEqual(EXPECTED_STARK_KEY_PAIR_MAINNET);
        });
        it('derives the default API key pair', async () => {
            const apiKey = await onboardingMainnetRemote.recoverDefaultApiCredentials(GANACHE_ADDRESS);
            expect(apiKey).toStrictEqual(EXPECTED_API_KEY_CREDENTIALS_MAINNET);
        });
    });
    describe('Ropsten, with a web3 provider', () => {
        beforeAll(async () => {
            const web3 = new web3_1.default(new web3_1.default.providers.HttpProvider('http://127.0.0.1:8545'));
            onboardingRopstenRemote = new onboarding_1.default('http://example.com', web3, 3);
        });
        it('derives the default STARK key pair', async () => {
            const keyPair = await onboardingRopstenRemote.deriveStarkKey(GANACHE_ADDRESS);
            expect(keyPair).toStrictEqual(EXPECTED_STARK_KEY_PAIR_ROPSTEN);
        });
        it('derives the default API key pair', async () => {
            const apiKey = await onboardingRopstenRemote.recoverDefaultApiCredentials(GANACHE_ADDRESS);
            expect(apiKey).toStrictEqual(EXPECTED_API_KEY_CREDENTIALS_ROPSTEN);
        });
    });
    describe('mainnet, with a local Ethereum private key', () => {
        beforeAll(() => {
            const web3 = new web3_1.default();
            onboardingMainnetLocal = new onboarding_1.default('http://example.com', web3, 1);
            web3.eth.accounts.wallet.add(GANACHE_PRIVATE_KEY);
        });
        it('derives the default STARK key pair', async () => {
            const keyPair = await onboardingMainnetLocal.deriveStarkKey(GANACHE_ADDRESS);
            expect(keyPair).toStrictEqual(EXPECTED_STARK_KEY_PAIR_MAINNET);
        });
        it('derives the default API key pair', async () => {
            const apiKey = await onboardingMainnetLocal.recoverDefaultApiCredentials(GANACHE_ADDRESS);
            expect(apiKey).toStrictEqual(EXPECTED_API_KEY_CREDENTIALS_MAINNET);
        });
    });
    describe('Ropsten, with a local Ethereum private key', () => {
        beforeAll(() => {
            const web3 = new web3_1.default();
            onboardingRopstenLocal = new onboarding_1.default('http://example.com', web3, 3);
            web3.eth.accounts.wallet.add(GANACHE_PRIVATE_KEY);
        });
        it('derives the default STARK key pair', async () => {
            const keyPair = await onboardingRopstenLocal.deriveStarkKey(GANACHE_ADDRESS);
            expect(keyPair).toStrictEqual(EXPECTED_STARK_KEY_PAIR_ROPSTEN);
        });
        it('derives the default API key pair', async () => {
            const apiKey = await onboardingRopstenLocal.recoverDefaultApiCredentials(GANACHE_ADDRESS);
            expect(apiKey).toStrictEqual(EXPECTED_API_KEY_CREDENTIALS_ROPSTEN);
        });
    });
});
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoib25ib2FyZGluZy50ZXN0LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vX190ZXN0c19fL29uYm9hcmRpbmcudGVzdC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7OztBQUFBLGdEQUF3QjtBQUV4QiwyRUFBbUQ7QUFFbkQsd0VBQXdFO0FBQ3hFLE1BQU0sZUFBZSxHQUFHLDRDQUE0QyxDQUFDO0FBQ3JFLE1BQU0sbUJBQW1CLEdBQUcsb0VBQW9FLENBQUM7QUFFakcsTUFBTSxvQ0FBb0MsR0FBRztJQUMzQyxHQUFHLEVBQUUsc0NBQXNDO0lBQzNDLE1BQU0sRUFBRSwwQ0FBMEM7SUFDbEQsVUFBVSxFQUFFLHNCQUFzQjtDQUNuQyxDQUFDO0FBQ0YsTUFBTSwrQkFBK0IsR0FBRztJQUN0QyxTQUFTLEVBQUUsa0VBQWtFO0lBQzdFLG9CQUFvQixFQUFFLGtFQUFrRTtJQUN4RixVQUFVLEVBQUUsa0VBQWtFO0NBQy9FLENBQUM7QUFDRixNQUFNLG9DQUFvQyxHQUFHO0lBQzNDLEdBQUcsRUFBRSxzQ0FBc0M7SUFDM0MsTUFBTSxFQUFFLDBDQUEwQztJQUNsRCxVQUFVLEVBQUUsc0JBQXNCO0NBQ25DLENBQUM7QUFDRixNQUFNLCtCQUErQixHQUFHO0lBQ3RDLFNBQVMsRUFBRSxrRUFBa0U7SUFDN0Usb0JBQW9CLEVBQUUsa0VBQWtFO0lBQ3hGLFVBQVUsRUFBRSxrRUFBa0U7Q0FDL0UsQ0FBQztBQUVGLElBQUksdUJBQW1DLENBQUM7QUFDeEMsSUFBSSx1QkFBbUMsQ0FBQztBQUN4QyxJQUFJLHNCQUFrQyxDQUFDO0FBQ3ZDLElBQUksc0JBQWtDLENBQUM7QUFFdkMsUUFBUSxDQUFDLG1CQUFtQixFQUFFLEdBQUcsRUFBRTtJQUVqQyxRQUFRLENBQUMsK0JBQStCLEVBQUUsR0FBRyxFQUFFO1FBRTdDLFNBQVMsQ0FBQyxLQUFLLElBQUksRUFBRTtZQUNuQixNQUFNLElBQUksR0FBRyxJQUFJLGNBQUksQ0FBQyxJQUFJLGNBQUksQ0FB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