"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.FactRegistry = void 0;
const web3_1 = __importDefault(require("web3"));
const Constants_1 = require("../lib/Constants");
const ContractCallHelpers_1 = require("../lib/ContractCallHelpers");
class FactRegistry {
    constructor(contracts) {
        this.contracts = contracts;
    }
    getAddress() {
        return this.contracts.factRegistry.options.address;
    }
    getTransferEthFact({ recipient, humanAmount, salt, }) {
        return this.getTransferErc20Fact({
            tokenAddress: Constants_1.ADDRESSES.ZERO,
            tokenDecimals: 18,
            recipient,
            humanAmount,
            salt,
        });
    }
    getTransferErc20Fact({ recipient, tokenAddress, tokenDecimals, humanAmount, salt, }) {
        const result = web3_1.default.utils.soliditySha3({ type: 'address', value: recipient }, { type: 'uint256', value: (0, ContractCallHelpers_1.humanTokenAmountToUint256)(humanAmount, tokenDecimals) }, { type: 'address', value: tokenAddress }, { type: 'uint256', value: (0, ContractCallHelpers_1.bignumberableToUint256)(salt) });
        return result;
    }
    async transferEth({ recipient, humanAmount, salt, }, options) {
        return this.contracts.send(this.contracts.factRegistry, this.contracts.factRegistry.methods.transfer(recipient, (0, ContractCallHelpers_1.bignumberableToUint256)(salt)), {
            ...options,
            value: (0, ContractCallHelpers_1.humanEthAmountToUint256)(humanAmount),
        });
    }
    async transferERC20({ recipient, tokenAddress, tokenDecimals, humanAmount, salt, }, options) {
        return this.contracts.send(this.contracts.factRegistry, this.contracts.factRegistry.methods.transferERC20(recipient, tokenAddress, (0, ContractCallHelpers_1.humanTokenAmountToUint256)(humanAmount, tokenDecimals), (0, ContractCallHelpers_1.bignumberableToUint256)(salt)), options);
    }
    async transferCollateralToken({ recipient, humanAmount, salt, }, options) {
        return this.contracts.send(this.contracts.factRegistry, this.contracts.factRegistry.methods.transferERC20(recipient, this.contracts.collateralToken.options.address, (0, ContractCallHelpers_1.humanCollateralAmountToUint256)(humanAmount), (0, ContractCallHelpers_1.bignumberableToUint256)(salt)), options);
    }
    // ============ Getters ============
    async indentify(options) {
        const result = await this.contracts.call(this.contracts.factRegistry.methods.indentify(), options);
        return result;
    }
    async hasRegisteredFact(options) {
        const result = await this.contracts.call(this.contracts.factRegistry.methods.hasRegisteredFact(), options);
        return result;
    }
    async isValid({ fact, }, options) {
        const result = await this.contracts.call(this.contracts.factRegistry.methods.isValid(fact), options);
        return result;
    }
}
exports.FactRegistry = FactRegistry;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiRmFjdFJlZ2lzdHJ5LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vc3JjL21vZHVsZXMvRmFjdFJlZ2lzdHJ5LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7OztBQUFBLGdEQUF3QjtBQUV4QixnREFBNkM7QUFDN0Msb0VBS29DO0FBVXBDLE1BQWEsWUFBWTtJQUd2QixZQUNFLFNBQW9CO1FBRXBCLElBQUksQ0FBQyxTQUFTLEdBQUcsU0FBUyxDQUFDO0lBQzdCLENBQUM7SUFFTSxVQUFVO1FBQ2YsT0FBTyxJQUFJLENBQUMsU0FBUyxDQUFDLFlBQVksQ0FBQyxPQUFPLENBQUMsT0FBTyxDQUFDO0lBQ3JELENBQUM7SUFFTSxrQkFBa0IsQ0FDdkIsRUFDRSxTQUFTLEVBQ1QsV0FBVyxFQUNYLElBQUksR0FLTDtRQUVELE9BQU8sSUFBSSxDQUFDLG9CQUFvQixDQUFDO1lBQy9CLFlBQVksRUFBRSxxQkFBUyxDQUFDLElBQUk7WUFDNUIsYUFBYSxFQUFFLEVBQUU7WUFDakIsU0FBUztZQUNULFdBQVc7WUFDWCxJQUFJO1NBQ0wsQ0FBQyxDQUFDO0lBQ0wsQ0FBQztJQUVNLG9CQUFvQixDQUN6QixFQUNFLFNBQVMsRUFDVCxZQUFZLEVBQ1osYUFBYSxFQUNiLFdBQVcsRUFDWCxJQUFJLEdBT0w7UUFFRCxNQUFNLE1BQU0sR0FBa0IsY0FBSSxDQUFDLEtBQUssQ0FBQyxZQUFZLENBQ25ELEVBQUUsSUFBSSxFQUFFLFNBQVMsRUFBRSxLQUFLLEVBQUUsU0FBUyxFQUFFLEVBQ3JDLEVBQUUsSUFBSSxFQUFFLFNBQVMsRUFBRSxLQUFLLEVBQUUsSUFBQSwrQ0FBeUIsRUFBQyxXQUFXLEVBQUUsYUFBYSxDQUFDLEVBQUUsRUFDakYsRUFBRSxJQUFJLEVBQUUsU0FBUyxFQUFFLEtBQUssRUFBRSxZQUFZLEVBQUUsRUFDeEMsRUFBRSxJQUFJLEVBQUUsU0FBUyxFQUFFLEtBQUssRUFBRSxJQUFBLDRDQUFzQixFQUFDLElBQUksQ0FBQyxF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